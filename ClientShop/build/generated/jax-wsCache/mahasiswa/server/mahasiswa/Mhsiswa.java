
package server.mahasiswa;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "mhsiswa", targetNamespace = "http://mahasiswa.server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Mhsiswa {


    /**
     * 
     * @param nim
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getData", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.GetData")
    @ResponseWrapper(localName = "getDataResponse", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.GetDataResponse")
    @Action(input = "http://mahasiswa.server/mhsiswa/getDataRequest", output = "http://mahasiswa.server/mhsiswa/getDataResponse")
    public List<Object> getData(
        @WebParam(name = "nim", targetNamespace = "")
        int nim);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.LoginResponse")
    @Action(input = "http://mahasiswa.server/mhsiswa/loginRequest", output = "http://mahasiswa.server/mhsiswa/loginResponse")
    public int login(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param kontak
     * @param nim
     * @param nama
     * @param jurusan
     * @param alamat
     */
    @WebMethod
    @RequestWrapper(localName = "editData", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.EditData")
    @ResponseWrapper(localName = "editDataResponse", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.EditDataResponse")
    @Action(input = "http://mahasiswa.server/mhsiswa/editDataRequest", output = "http://mahasiswa.server/mhsiswa/editDataResponse")
    public void editData(
        @WebParam(name = "nim", targetNamespace = "")
        int nim,
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "jurusan", targetNamespace = "")
        String jurusan,
        @WebParam(name = "alamat", targetNamespace = "")
        String alamat,
        @WebParam(name = "kontak", targetNamespace = "")
        int kontak);

    /**
     * 
     * @param search
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cariData", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.CariData")
    @ResponseWrapper(localName = "cariDataResponse", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.CariDataResponse")
    @Action(input = "http://mahasiswa.server/mhsiswa/cariDataRequest", output = "http://mahasiswa.server/mhsiswa/cariDataResponse")
    public List<Object> cariData(
        @WebParam(name = "search", targetNamespace = "")
        String search);

    /**
     * 
     * @param sortir
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "urutkanData", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.UrutkanData")
    @ResponseWrapper(localName = "urutkanDataResponse", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.UrutkanDataResponse")
    @Action(input = "http://mahasiswa.server/mhsiswa/urutkanDataRequest", output = "http://mahasiswa.server/mhsiswa/urutkanDataResponse")
    public List<Object> urutkanData(
        @WebParam(name = "sortir", targetNamespace = "")
        String sortir);

    /**
     * 
     * @param kontak
     * @param nim
     * @param nama
     * @param jurusan
     * @param alamat
     */
    @WebMethod
    @RequestWrapper(localName = "tambahData", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.TambahData")
    @ResponseWrapper(localName = "tambahDataResponse", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.TambahDataResponse")
    @Action(input = "http://mahasiswa.server/mhsiswa/tambahDataRequest", output = "http://mahasiswa.server/mhsiswa/tambahDataResponse")
    public void tambahData(
        @WebParam(name = "nim", targetNamespace = "")
        int nim,
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "jurusan", targetNamespace = "")
        String jurusan,
        @WebParam(name = "alamat", targetNamespace = "")
        String alamat,
        @WebParam(name = "kontak", targetNamespace = "")
        int kontak);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "tampilData", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.TampilData")
    @ResponseWrapper(localName = "tampilDataResponse", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.TampilDataResponse")
    @Action(input = "http://mahasiswa.server/mhsiswa/tampilDataRequest", output = "http://mahasiswa.server/mhsiswa/tampilDataResponse")
    public List<Object> tampilData();

    /**
     * 
     * @param nim
     */
    @WebMethod
    @RequestWrapper(localName = "hapusData", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.HapusData")
    @ResponseWrapper(localName = "hapusDataResponse", targetNamespace = "http://mahasiswa.server/", className = "server.mahasiswa.HapusDataResponse")
    @Action(input = "http://mahasiswa.server/mhsiswa/hapusDataRequest", output = "http://mahasiswa.server/mhsiswa/hapusDataResponse")
    public void hapusData(
        @WebParam(name = "nim", targetNamespace = "")
        int nim);

}
